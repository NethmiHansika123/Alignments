import { createSlice, PayloadAction } from '@reduxjs/toolkit';

interface Product {
title: string;
price: number;
id: string;

}

const initialState: Product[] = {
	{title: 'aaa', price: 60, id: 'eft'}
	{title: 'aaa', price: 60, id: 'eft'}
	{title: 'aaa', price: 60, id: 'eft'}
}

const ProductSlice = createSlice({

	name: 'Products',
	initialState,
	reducers: {
	
	addProduct: (state, action: PayloadAction<Product>) => {
	return [action.payload, ...state]

},
removeProduct: (state,action: PayloadAction<string> => {
	return state.filter(product => product.id !== action.payload)
}

}

}

})

export const {addProduct,removeProduct} = productSlice.actions;
export const getProducts = (state: RootState) => state.products;
export default productSlice.reducer;


-----------------------------------------------------------------

export type RootState = ReturnType<typeof.state>

-----------------------------------------------------------------
const products = useSelector(getProducts)

